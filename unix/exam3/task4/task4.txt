
Разликата между синхронните и асинхронните входно/изходни операции се състои в това колко добре се използва капацитета на машината.

Синхронният вход/изход се характеризира със свойството, че блокира действието на програмата, която чака приключването на синхронния вход/изход. По-точно изчакващата програма бива приспана. Тоест изчисленията спират, за да бъде изпълнена входно/изходната операция и продължават, чак когато синхронната входно/изходна операция приключи.
От хардуерна гледна точка, синхронният вход/изход кара приспаният процес да гладува за процесорно време, вместо да изпълнява изчисления, докато например хард-дискът извършва вход/изход. 

Например един уеб сървър е процес, който трябва да подготви потребителска форма за попълване за уеб клиент, която съдържа текст, препоръки и картинки. Уеб сървърът трябва съответно да извърши много изчисления, изискващи процесорно време, за да подготви препоръките, както и да прочете от входно/изходно устройство (пр. от хард-диск или от интернет) картинките за формата. Ако входно/изходната операция за прочитане на картинките е синхронна, уеб сървърът ще блокира действието си, защото ще бъде приспан, докато тази синхронна операция не приключи и така уеб сървърът ще седи гладен за процесорно време и няма да върши работа, докато процесорът не е натоварен. Така не се използва пълният капацитет на изчислителния ресурс.

От друга страна, асинхронният вход/изход позволява процесът, който изчаква входно/изходната операция да продължи с изчисленията си (процесът не бива приспан) и така се използва капацитетът на процесора. След прекратяване на вход/изход изчакващият процес може да получи известие за събитието. Изчакващият процес може периодично да запитва дали входно/изходната операция е прключила или да се договори с входно/изходната операция, когато тя приключи, то тя да уведоми изчакващия процес. Последната стратегия от двете е така нарешеният Observer шаблон.

Пример за асинхронен уеб сървър е Node.js, който е един процес, който поставя задачки за изпълнение на няколко нишки, които работят асинхронно и уведомяват главния процес (тоест уеб сървъра) за събития около поставената задача.

